name: 'Production Continuous Deployment'

on:
  release:
    types: [released]

jobs:
  package:
    name: 'Publish Container'
    runs-on: ubuntu-latest
    steps:
      # Setup working environment for Docker
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - id: docker_meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4
        with:
          images: ghcr.io/sn0wcrack/saucybot-discord
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2
      - uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1 # v2
      - name: 'Login to Container Registry'
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
      - name: 'Build and Publish'
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4
        env:
          RELEASE_VERSION: ${{ github.ref_name }}
          CONFIGURATION: Release
        with:
          push: true
          context: ./SaucyBot
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: CONFIGURATION=Release
          
  deploy:
    name: 'Deploy'
    needs: package
    runs-on: ubuntu-latest
    environment: Production
    
    steps:
      - uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOSTNAME }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            ./update.sh
